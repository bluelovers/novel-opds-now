"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const setup_1 = __importDefault(require("../../server/gun/setup"));
const bluebird_1 = __importDefault(require("bluebird"));
const array_hyper_unique_1 = require("array-hyper-unique");
const retryGunNode_1 = __importDefault(require("./retryGunNode"));
function makeArrayEntrys(siteID, novel_id) {
    if (!Array.isArray(siteID)) {
        siteID = [siteID];
    }
    if (!Array.isArray(novel_id)) {
        novel_id = [novel_id];
    }
    siteID = array_hyper_unique_1.array_unique_overwrite(siteID.map(v => String(v)));
    novel_id = array_hyper_unique_1.array_unique_overwrite(novel_id.map(v => String(v)));
    return siteID
        .reduce((a, siteID) => {
        siteID && novel_id.forEach(novel_id => {
            novel_id && a.push([siteID, novel_id]);
        });
        return a;
    }, []);
}
exports.makeArrayEntrys = makeArrayEntrys;
function allGunEpubFile(siteID, novel_id) {
    if (!Array.isArray(siteID)) {
        siteID = [siteID];
    }
    if (!Array.isArray(novel_id)) {
        novel_id = [novel_id];
    }
    siteID = array_hyper_unique_1.array_unique_overwrite(siteID.map(v => String(v)));
    novel_id = array_hyper_unique_1.array_unique_overwrite(novel_id.map(v => String(v)));
    return siteID
        .reduce((a, siteID) => {
        siteID && novel_id.forEach(novel_id => {
            novel_id && a.push(nodeGunEpubFile(siteID, novel_id));
        });
        return a;
    }, []);
}
exports.allGunEpubFile = allGunEpubFile;
function promiseGunEpubFile(siteID, novel_id) {
    return allGunEpubFile(siteID, novel_id)
        .map(node => retryGunNode_1.default(node).timeout(10 * 1000).catch(e => null));
}
exports.promiseGunEpubFile = promiseGunEpubFile;
function nodeGunEpubFile(siteID, novel_id) {
    return setup_1.default().get(siteID).get(novel_id);
}
exports.nodeGunEpubFile = nodeGunEpubFile;
function raceGunEpubFile(siteID, novel_id) {
    return bluebird_1.default.race(promiseGunEpubFile(siteID, novel_id));
}
exports.raceGunEpubFile = raceGunEpubFile;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXB1YkZpbGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJlcHViRmlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLG1FQUE0QztBQUM1Qyx3REFBZ0M7QUFDaEMsMkRBQTREO0FBTTVELGtFQUEwQztBQUUxQyxTQUFnQixlQUFlLENBQUMsTUFBK0IsRUFBRSxRQUEwQztJQUUxRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFDMUI7UUFDQyxNQUFNLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUNsQjtJQUNELElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUM1QjtRQUNDLFFBQVEsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQ3RCO0lBRUQsTUFBTSxHQUFHLDJDQUFzQixDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzVELFFBQVEsR0FBRywyQ0FBc0IsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVoRSxPQUFPLE1BQU07U0FDWCxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUU7UUFHckIsTUFBTSxJQUFLLFFBQXFCLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBRW5ELFFBQVEsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUE7UUFDdkMsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLENBQUMsQ0FBQztJQUNWLENBQUMsRUFBRSxFQUF3QixDQUFDLENBQUE7QUFDOUIsQ0FBQztBQXpCRCwwQ0F5QkM7QUFFRCxTQUFnQixjQUFjLENBQUMsTUFBK0IsRUFBRSxRQUEwQztJQUV6RyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFDMUI7UUFDQyxNQUFNLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUNsQjtJQUNELElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUM1QjtRQUNDLFFBQVEsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQ3RCO0lBRUQsTUFBTSxHQUFHLDJDQUFzQixDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzVELFFBQVEsR0FBRywyQ0FBc0IsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVoRSxPQUFRLE1BQWdDO1NBQ3RDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRTtRQUdyQixNQUFNLElBQUssUUFBcUIsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFJbkQsUUFBUSxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFBO1FBQ3ZELENBQUMsQ0FBQyxDQUFDO1FBRUgsT0FBTyxDQUFDLENBQUM7SUFDVixDQUFDLEVBQUUsRUFBMEMsQ0FBQyxDQUFBO0FBQy9DLENBQUM7QUEzQkQsd0NBMkJDO0FBRUQsU0FBZ0Isa0JBQWtCLENBQW1CLE1BQXlCLEVBQUUsUUFBMkI7SUFFMUcsT0FBTyxjQUFjLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQztTQUNyQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxzQkFBWSxDQUFJLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQTtBQUN6RSxDQUFDO0FBSkQsZ0RBSUM7QUFFRCxTQUFnQixlQUFlLENBQW1CLE1BQWMsRUFBRSxRQUFnQjtJQUdqRixPQUFPLGVBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxNQUE2QixDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFBO0FBQ2pFLENBQUM7QUFKRCwwQ0FJQztBQUVELFNBQWdCLGVBQWUsQ0FBQyxNQUF5QixFQUFFLFFBQTJCO0lBRXJGLE9BQU8sa0JBQVEsQ0FBQyxJQUFJLENBQWUsa0JBQWtCLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBRXZFO0FBQ0YsQ0FBQztBQUxELDBDQUtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHVzZUd1biBmcm9tICcuLi8uLi9zZXJ2ZXIvZ3VuL3NldHVwJztcbmltcG9ydCBCbHVlYmlyZCBmcm9tICdibHVlYmlyZCc7XG5pbXBvcnQgeyBhcnJheV91bmlxdWVfb3ZlcndyaXRlIH0gZnJvbSAnYXJyYXktaHlwZXItdW5pcXVlJztcbmltcG9ydCB7IElHdW5FcHViTm9kZSB9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCBHdW4gZnJvbSAnZ3VuJztcbmltcG9ydCB7IElUU1ZhbHVlT3JBcnJheSB9IGZyb20gJ3RzLXR5cGUnO1xuaW1wb3J0IHsgRW51bUlES0VZTGlzdCwgRW51bUlES0VZTGlzdFN0cmluZyB9IGZyb20gJ25vdmVsLWRvd25sb2FkZXIvc3JjL2FsbC9jb25zdCc7XG5pbXBvcnQgeyBJR3VuQ2hhaW5SZWZlcmVuY2UgfSBmcm9tICdndW4vdHlwZXMvY2hhaW4nO1xuaW1wb3J0IHJldHJ5R3VuTm9kZSBmcm9tICcuL3JldHJ5R3VuTm9kZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBtYWtlQXJyYXlFbnRyeXMoc2l0ZUlEOiBJVFNWYWx1ZU9yQXJyYXk8c3RyaW5nPiwgbm92ZWxfaWQ6IElUU1ZhbHVlT3JBcnJheTxzdHJpbmcgfCBudW1iZXI+KVxue1xuXHRpZiAoIUFycmF5LmlzQXJyYXkoc2l0ZUlEKSlcblx0e1xuXHRcdHNpdGVJRCA9IFtzaXRlSURdO1xuXHR9XG5cdGlmICghQXJyYXkuaXNBcnJheShub3ZlbF9pZCkpXG5cdHtcblx0XHRub3ZlbF9pZCA9IFtub3ZlbF9pZF07XG5cdH1cblxuXHRzaXRlSUQgPSBhcnJheV91bmlxdWVfb3ZlcndyaXRlKHNpdGVJRC5tYXAodiA9PiBTdHJpbmcodikpKTtcblx0bm92ZWxfaWQgPSBhcnJheV91bmlxdWVfb3ZlcndyaXRlKG5vdmVsX2lkLm1hcCh2ID0+IFN0cmluZyh2KSkpO1xuXG5cdHJldHVybiBzaXRlSURcblx0XHQucmVkdWNlKChhLCBzaXRlSUQpID0+IHtcblxuXG5cdFx0XHRzaXRlSUQgJiYgKG5vdmVsX2lkIGFzIHN0cmluZ1tdKS5mb3JFYWNoKG5vdmVsX2lkID0+IHtcblxuXHRcdFx0XHRub3ZlbF9pZCAmJiBhLnB1c2goW3NpdGVJRCwgbm92ZWxfaWRdKVxuXHRcdFx0fSk7XG5cblx0XHRcdHJldHVybiBhO1xuXHRcdH0sIFtdIGFzIFtzdHJpbmcsIHN0cmluZ11bXSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFsbEd1bkVwdWJGaWxlKHNpdGVJRDogSVRTVmFsdWVPckFycmF5PHN0cmluZz4sIG5vdmVsX2lkOiBJVFNWYWx1ZU9yQXJyYXk8c3RyaW5nIHwgbnVtYmVyPilcbntcblx0aWYgKCFBcnJheS5pc0FycmF5KHNpdGVJRCkpXG5cdHtcblx0XHRzaXRlSUQgPSBbc2l0ZUlEXTtcblx0fVxuXHRpZiAoIUFycmF5LmlzQXJyYXkobm92ZWxfaWQpKVxuXHR7XG5cdFx0bm92ZWxfaWQgPSBbbm92ZWxfaWRdO1xuXHR9XG5cblx0c2l0ZUlEID0gYXJyYXlfdW5pcXVlX292ZXJ3cml0ZShzaXRlSUQubWFwKHYgPT4gU3RyaW5nKHYpKSk7XG5cdG5vdmVsX2lkID0gYXJyYXlfdW5pcXVlX292ZXJ3cml0ZShub3ZlbF9pZC5tYXAodiA9PiBTdHJpbmcodikpKTtcblxuXHRyZXR1cm4gKHNpdGVJRCBhcyBFbnVtSURLRVlMaXN0U3RyaW5nW10pXG5cdFx0LnJlZHVjZSgoYSwgc2l0ZUlEKSA9PiB7XG5cblxuXHRcdFx0c2l0ZUlEICYmIChub3ZlbF9pZCBhcyBzdHJpbmdbXSkuZm9yRWFjaChub3ZlbF9pZCA9PiB7XG5cblx0XHRcdC8vY29uc29sZS5sb2coc2l0ZUlELCBub3ZlbF9pZCk7XG5cblx0XHRcdFx0bm92ZWxfaWQgJiYgYS5wdXNoKG5vZGVHdW5FcHViRmlsZShzaXRlSUQsIG5vdmVsX2lkKSlcblx0XHR9KTtcblxuXHRcdHJldHVybiBhO1xuXHR9LCBbXSBhcyBSZXR1cm5UeXBlPHR5cGVvZiBub2RlR3VuRXB1YkZpbGU+W10pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm9taXNlR3VuRXB1YkZpbGU8VCA9IElHdW5FcHViTm9kZT4oc2l0ZUlEOiBzdHJpbmcgfCBzdHJpbmdbXSwgbm92ZWxfaWQ6IHN0cmluZyB8IHN0cmluZ1tdKVxue1xuXHRyZXR1cm4gYWxsR3VuRXB1YkZpbGUoc2l0ZUlELCBub3ZlbF9pZClcblx0XHQubWFwKG5vZGUgPT4gcmV0cnlHdW5Ob2RlPFQ+KG5vZGUpLnRpbWVvdXQoMTAgKiAxMDAwKS5jYXRjaChlID0+IG51bGwpKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbm9kZUd1bkVwdWJGaWxlPFQgPSBJR3VuRXB1Yk5vZGU+KHNpdGVJRDogc3RyaW5nLCBub3ZlbF9pZDogc3RyaW5nKTogSUd1bkNoYWluUmVmZXJlbmNlPFQsIHN0cmluZywgZmFsc2U+XG57XG5cdC8vIEB0cy1pZ25vcmVcblx0cmV0dXJuIHVzZUd1bigpLmdldChzaXRlSUQgYXMgRW51bUlES0VZTGlzdFN0cmluZykuZ2V0KG5vdmVsX2lkKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmFjZUd1bkVwdWJGaWxlKHNpdGVJRDogc3RyaW5nIHwgc3RyaW5nW10sIG5vdmVsX2lkOiBzdHJpbmcgfCBzdHJpbmdbXSlcbntcblx0cmV0dXJuIEJsdWViaXJkLnJhY2U8SUd1bkVwdWJOb2RlPihwcm9taXNlR3VuRXB1YkZpbGUoc2l0ZUlELCBub3ZlbF9pZCkpXG5cdFx0Ly8udGFwKHYgPT4gY29uc29sZS5kaXIodikpXG5cdDtcbn1cbiJdfQ==