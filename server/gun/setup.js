"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const gun_1 = __importDefault(require("gun"));
require("gun-tag");
const path_1 = require("path");
const const_1 = require("../../lib/const");
const fs_extra_1 = require("fs-extra");
const logger_1 = __importDefault(require("debug-color2/logger"));
let gun;
exports.gun = gun;
gun_1.default.log = Object.assign(() => { }, gun_1.default.log, {
    verbose: false,
});
gun_1.default.log.off = true;
console.LOG = false;
function setupGun(app) {
    let file = path_1.join(const_1.OUTPUT_DIR, 'novel-opds-now.cache', 'radata');
    fs_extra_1.ensureDirSync(file);
    let _gun = new gun_1.default({
        web: app,
        peers: [
            "https://my-test-gun-server.herokuapp.com/gun",
        ],
        file,
        log() {
        },
    });
    logger_1.default.debug(`P2P 緩存位於 ${file}`);
    exports.gun = gun = _gun;
    return _gun;
}
exports.setupGun = setupGun;
function useGun() {
    return useGunRoot()
        .get('epub-file');
}
exports.useGun = useGun;
function useGunRoot() {
    return gun || (exports.gun = gun = setupGun());
}
exports.useGunRoot = useGunRoot;
exports.default = useGun;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzZXR1cC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUlBLDhDQUFzQjtBQUV0QixtQkFBaUI7QUFHakIsK0JBQTRCO0FBQzVCLDJDQUE2QztBQUM3Qyx1Q0FBeUM7QUFDekMsaUVBQTJDO0FBTzNDLElBQUksR0FBZ0MsQ0FBQztBQXNENUIsa0JBQUc7QUFuRFosYUFBRyxDQUFDLEdBQUcsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxHQUFFLENBQUMsRUFBRSxhQUFHLENBQUMsR0FBRyxFQUFFO0lBQzFDLE9BQU8sRUFBRSxLQUFLO0NBQ2QsQ0FBQyxDQUFDO0FBRUgsYUFBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDO0FBRW5CLE9BQU8sQ0FBQyxHQUFHLEdBQUcsS0FBSyxDQUFDO0FBRXBCLFNBQWdCLFFBQVEsQ0FBQyxHQUFzQjtJQUU5QyxJQUFJLElBQUksR0FBRyxXQUFJLENBQUMsa0JBQVUsRUFBRSxzQkFBc0IsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUM5RCx3QkFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRXBCLElBQUksSUFBSSxHQUFHLElBQUksYUFBRyxDQUlmO1FBQ0YsR0FBRyxFQUFFLEdBQUc7UUFDUixLQUFLLEVBQUU7WUFJTiw4Q0FBOEM7U0FDOUM7UUFDRCxJQUFJO1FBQ0osR0FBRztRQUdILENBQUM7S0FDRCxDQUFDLENBQUM7SUFFSCxnQkFBUSxDQUFDLEtBQUssQ0FBQyxZQUFZLElBQUksRUFBRSxDQUFDLENBQUM7SUFFbkMsY0FBQSxHQUFHLEdBQUcsSUFBSSxDQUFDO0lBRVgsT0FBTyxJQUFJLENBQUE7QUFDWixDQUFDO0FBN0JELDRCQTZCQztBQUVELFNBQWdCLE1BQU07SUFFckIsT0FBTyxVQUFVLEVBQUU7U0FDakIsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUNoQjtBQUNILENBQUM7QUFMRCx3QkFLQztBQUVELFNBQWdCLFVBQVU7SUFFekIsT0FBTyxHQUFHLElBQUksQ0FBQyxjQUFBLEdBQUcsR0FBRyxRQUFRLEVBQUUsQ0FBQyxDQUFDO0FBQ2xDLENBQUM7QUFIRCxnQ0FHQztBQUlELGtCQUFlLE1BQU0sQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSB1c2VyIG9uIDIwMjAvMi8xLlxuICovXG5cbmltcG9ydCBHdW4gZnJvbSAnZ3VuJztcbi8vaW1wb3J0ICdndW4vbGliL3NlcnZlcic7XG5pbXBvcnQgJ2d1bi10YWcnO1xuaW1wb3J0IHR5cGUgeyBFeHByZXNzIH0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgX19yb290IGZyb20gJy4uLy4uL2xpYi9fX3Jvb3QnO1xuaW1wb3J0IHsgam9pbiB9IGZyb20gJ3BhdGgnO1xuaW1wb3J0IHsgT1VUUFVUX0RJUiB9IGZyb20gJy4uLy4uL2xpYi9jb25zdCc7XG5pbXBvcnQgeyBlbnN1cmVEaXJTeW5jIH0gZnJvbSAnZnMtZXh0cmEnO1xuaW1wb3J0IF9jb25zb2xlIGZyb20gJ2RlYnVnLWNvbG9yMi9sb2dnZXInO1xuaW1wb3J0IHR5cGUgeyBTZXJ2ZXIgfSBmcm9tICdodHRwJztcbmltcG9ydCB7IElHdW5TdGF0aWMgfSBmcm9tICdndW4vdHlwZXMvc3RhdGljJztcbmltcG9ydCB0eXBlIHsgSUd1bkVwdWJOb2RlIH0gZnJvbSAnLi4vLi4vbGliL3R5cGVzJztcbmltcG9ydCB0eXBlIHsgRW51bUlES0VZTGlzdCwgRW51bUlES0VZTGlzdFN0cmluZyB9IGZyb20gJ25vdmVsLWRvd25sb2FkZXIvc3JjL2FsbC9jb25zdCc7XG5pbXBvcnQgUmFkaXNrIGZyb20gJ2d1bi9saWIvcmFkaXNrJztcblxubGV0IGd1bjogUmV0dXJuVHlwZTx0eXBlb2Ygc2V0dXBHdW4+O1xuXG4vLyBAdHMtaWdub3JlXG5HdW4ubG9nID0gT2JqZWN0LmFzc2lnbigoKSA9PiB7fSwgR3VuLmxvZywge1xuXHR2ZXJib3NlOiBmYWxzZSxcbn0pO1xuLy8gQHRzLWlnbm9yZVxuR3VuLmxvZy5vZmYgPSB0cnVlO1xuLy8gQHRzLWlnbm9yZVxuY29uc29sZS5MT0cgPSBmYWxzZTtcblxuZXhwb3J0IGZ1bmN0aW9uIHNldHVwR3VuKGFwcD86IEV4cHJlc3MgfCBTZXJ2ZXIpXG57XG5cdGxldCBmaWxlID0gam9pbihPVVRQVVRfRElSLCAnbm92ZWwtb3Bkcy1ub3cuY2FjaGUnLCAncmFkYXRhJyk7XG5cdGVuc3VyZURpclN5bmMoZmlsZSk7XG5cblx0bGV0IF9ndW4gPSBuZXcgR3VuPHtcblx0XHQnZXB1Yi1maWxlJzoge1xuXHRcdFx0W0sgaW4gRW51bUlES0VZTGlzdFN0cmluZyB8IEVudW1JREtFWUxpc3RdOiBSZWNvcmQ8c3RyaW5nLCBJR3VuRXB1Yk5vZGU+XG5cdFx0fVxuXHR9Pih7XG5cdFx0d2ViOiBhcHAsXG5cdFx0cGVlcnM6IFtcblx0XHRcdC8vXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvZ3VuXCIsXG5cdFx0XHQvL1wiaHR0cHM6Ly9ndW5qcy5oZXJva3VhcHAuY29tL2d1blwiLFxuXHRcdFx0Ly9cImh0dHA6Ly9ubXIuaW86ODc2NS9ndW5cIixcblx0XHRcdFwiaHR0cHM6Ly9teS10ZXN0LWd1bi1zZXJ2ZXIuaGVyb2t1YXBwLmNvbS9ndW5cIixcblx0XHRdLFxuXHRcdGZpbGUsXG5cdFx0bG9nKClcblx0XHR7XG5cblx0XHR9LFxuXHR9KTtcblxuXHRfY29uc29sZS5kZWJ1ZyhgUDJQIOe3qeWtmOS9jeaWvCAke2ZpbGV9YCk7XG5cblx0Z3VuID0gX2d1bjtcblxuXHRyZXR1cm4gX2d1blxufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlR3VuKClcbntcblx0cmV0dXJuIHVzZUd1blJvb3QoKVxuXHRcdC5nZXQoJ2VwdWItZmlsZScpXG5cdFx0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlR3VuUm9vdCgpXG57XG5cdHJldHVybiBndW4gfHwgKGd1biA9IHNldHVwR3VuKCkpO1xufVxuXG5leHBvcnQgeyBndW4gfVxuXG5leHBvcnQgZGVmYXVsdCB1c2VHdW5cbiJdfQ==